{"version":3,"sources":["Components/Poster.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Carousel.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Actor.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/noPosterSmall.png"],"names":["Container","styled","div","Image","props","bgUrl","Rating","span","Detail","ImageContainer","Title","Year","Poster","id","imageUrl","title","rating","year","isMovie","require","default","role","aria-label","to","length","substring","prototype","PropTypes","number","string","isRequired","bool","NextArrow","onClick","className","style","position","bottom","right","color","width","height","textAlign","lineHeight","display","fontSize","cursor","PreArrow","left","settings","infinite","centerPadding","slidesToShow","swipeToSlide","nextArrow","prevArrow","responsive","breakpoint","slidesToScroll","Section","nowPlaying","map","movie","original_title","original_name","poster_path","vote_average","release_date","first_air_date","prototyps","Text","Message","text","MainSlider","SubSlider","MainImg","thumb","SubImg","MainTitle","SubContent","OverView","SubTitle","Item","prop","DetailTxt","Carousel","state","nav1","nav2","this","setState","slider1","slider2","asNavFor","ref","slider","arrows","content","index","backdrop_path","name","overview","focusOnSelect","centerMode","autoplay","autoplaySpeed","slice","Component","Slider","Contents","HomePresenter","upComing","popular","loading","error","Helmet","Loader","api","axios","create","baseURL","params","api_key","language","tvApi","get","append_to_response","term","query","encodeURIComponent","moviesApi","HomeContainer","a","data","results","React","TVPresenter","topRated","airingToday","TVContainer","Form","form","Input","input","SearchPresenter","movieResult","tvResult","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","li","current","SLink","Link","withRouter","pathname","location","Img","Name","CharName","character","profile_path","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","p","VideoFrame","VideoContainer","ContentContainer","ActorContainer","DetailPresenter","cast","videos","result","console","log","runtime","episode_run_time","genres","genre","video","url","key","actor","Actor","DetailContainer","vidoes","includes","match","push","history","parsedId","Number","isNaN","temp","tempCast","path","exact","component","Home","TV","Search","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAKMA,EAAYC,IAAOC,IAAV,kEAKTC,EAAQF,IAAOC,IAAV,0MACe,SAACE,GAAD,OAAWA,EAAMC,SAQrCC,EAASL,IAAOM,KAAV,qIAQNC,EAASP,IAAOM,KAAV,sHAQNE,EAAiBR,IAAOC,IAAV,4MAIdC,EAGAG,EAGAE,GAMAE,EAAQT,IAAOM,KAAV,sEAKLI,EAAOV,IAAOM,KAAV,oFAKJK,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,eAAClB,EAAD,WACE,eAACS,EAAD,WACE,cAACN,EAAD,CACEE,MACES,EAAQ,yCAC8BA,GAClCK,EAAQ,IAA+BC,UAG/C,eAACd,EAAD,WACE,sBAAMe,KAAK,MAAMC,aAAW,SAA5B,oBAEQ,IACPN,EAJH,SAMA,cAAC,IAAD,CAAMO,GAAIL,EAAO,iBAAaL,GAAb,cAA2BA,GAA5C,SACE,cAACL,EAAD,+BAGJ,cAACE,EAAD,UAAQK,EAAMS,OAAS,GAAf,UAAuBT,EAAMU,UAAU,EAAG,IAA1C,OAAqDV,IAC7D,cAACJ,EAAD,UAAOM,QAIXL,EAAOc,UAAY,CACjBb,GAAIc,IAAUC,OACdd,SAAUa,IAAUE,OACpBd,MAAOY,IAAUE,OAAOC,WACxBd,OAAQW,IAAUC,OAClBX,KAAMU,IAAUE,OAAOC,WACvBZ,QAASS,IAAUI,MAGNnB,I,IAAAA,I,iBCtFTZ,G,YAAYC,IAAOC,IAAV,mFAMTQ,EAAQT,IAAOM,KAAV,qEAKX,SAASyB,EAAU5B,GAAQ,IACjB6B,EAAY7B,EAAZ6B,QACR,OACE,sBACEC,UAAU,aACVC,MAAO,CACLC,SAAU,WACVC,OAAQ,MACRC,MAAO,QACPC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,OACZC,QAAS,eACTC,SAAU,OACVC,OAAQ,WAEVb,QAASA,EAfX,SAiBE,oCAKN,SAASc,EAAS3C,GAAQ,IAChB6B,EAAY7B,EAAZ6B,QACR,OACE,sBACEC,UAAU,aACVC,MAAO,CACLC,SAAU,WACVC,OAAQ,MACRW,KAAM,QACNT,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,OACZC,QAAS,eACTC,SAAU,OACVC,OAAQ,WAEVb,QAASA,EAfX,SAiBE,oCAKN,IAAMgB,EAAW,CACff,UAAW,SACXgB,UAAU,EACVC,cAAe,OACfC,aAAc,GACdC,cAAc,EACdC,UAAW,cAACtB,EAAD,IACXuB,UAAW,cAACR,EAAD,IACXS,WAAY,CACV,CACEC,WAAY,KACZR,SAAU,CACRG,aAAc,GACdM,eAAgB,KAGpB,CACED,WAAY,KACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,IAGpB,CACED,WAAY,IACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,IAGpB,CACED,WAAY,IACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,MAMlBC,EAAU,SAAC,GAAD,IAAG5C,EAAH,EAAGA,MAAO6C,EAAV,EAAUA,WAAY1C,EAAtB,EAAsBA,QAAtB,OACd,eAAC,EAAD,WACE,cAAC,EAAD,UAAQH,IACP6C,GAAcA,EAAWpC,OAAS,GACjC,cAAC,IAAD,2BAAYyB,GAAZ,aACGW,EAAWC,KAAI,SAACC,GAAD,OACd,mCACE,cAAC,EAAD,CAEEjD,GAAIiD,EAAMjD,GACVE,MAAOG,EAAU4C,EAAMC,eAAiBD,EAAME,cAC9ClD,SAAUgD,EAAMG,YAChBjD,OAAQ8C,EAAMI,aACdhD,QAASA,EACTD,KAAM,kBACJC,EACI4C,EAAMK,aAAa1C,UAAU,EAAG,GAChCqC,EAAMM,eAAe3C,UAAU,EAAG,KATnCqC,EAAMjD,gBAmBzB8C,EAAQU,UAAY,CAClBtD,MAAOY,IAAUE,OAAOC,YAGX6B,I,MAAAA,IC1IT3D,EAAYC,IAAOC,IAAV,sJASA,oBACb,cAAC,EAAD,UACE,sBAAMmB,KAAK,MAAMC,aAAW,UAA5B,uBCVEtB,GAAYC,IAAOC,IAAV,2FAMToE,GAAOrE,IAAOM,KAAV,gEACC,SAACH,GAAD,OAAWA,EAAMmC,SAItBgC,GAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMjC,EAAT,EAASA,MAAT,OACd,cAAC,GAAD,UACE,cAAC+B,GAAD,CAAM/B,MAAOA,EAAb,SAAqBiC,OAIzBD,GAAQ7C,UAAY,CAClB8C,KAAM7C,IAAUE,OAAOC,WACvBS,MAAOZ,IAAUE,OAAOC,YAGXyC,I,oIAAAA,MClBTvE,GAAYC,IAAOC,IAAV,wFAMTuE,GAAaxE,IAAOC,IAAV,qDAIVwE,GAAYzE,IAAOC,IAAV,mGAOTyE,GAAU1E,IAAOC,IAAV,2NACa,SAACE,GAAD,OAAWA,EAAMC,SAI/B,SAACD,GAAD,OAAYA,EAAMwE,MAAQ,OAAS,yBAMzCC,GAAS5E,IAAOC,IAAV,yOACc,SAACE,GAAD,OAAWA,EAAMC,SAWrCyE,GAAY7E,IAAOC,IAAV,qGAOT6E,GAAa9E,IAAOM,KAAV,qGAOVyE,GAAW/E,IAAOC,IAAV,qGAOR+E,GAAWhF,IAAOC,IAAV,mGAORgF,GAAOjF,IAAOC,IAAV,qGACG,SAACiF,GAAD,OAAUA,EAAKP,SAOtBQ,GAAYnF,IAAOC,IAAV,4QAeMmF,G,kDACnB,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IACDkF,MAAQ,CACXC,KAAM,KACNC,KAAM,MAJS,E,qDAQnB,WACEC,KAAKC,SAAS,CACZH,KAAME,KAAKE,QACXH,KAAMC,KAAKG,Y,oBAIf,WAAU,IAAD,OACP,OACE,eAAC,GAAD,WACE,cAACnB,GAAD,UACE,cAAC,IAAD,CACEoB,SAAUJ,KAAKH,MAAME,KACrBM,IAAK,SAACC,GAAD,OAAa,EAAKJ,QAAUI,GACjCC,QAAQ,EAHV,SAKGP,KAAKrF,MAAMwD,WAAWC,KAAI,SAACoC,EAASC,GAAV,OACzB,cAAChB,GAAD,CAAkBN,MAAO,IAAzB,SACE,eAACD,GAAD,CACEC,OAAO,EACPvE,MAAK,6CAAwC4F,EAAQE,eAFvD,UAIE,cAACrB,GAAD,UACG,EAAK1E,MAAMc,QAAU+E,EAAQlF,MAAQkF,EAAQG,OAEhD,cAACrB,GAAD,UACG,EAAK3E,MAAMc,QACR+E,EAAQ9B,aAAa1C,UAAU,EAAG,GAClCwE,EAAQ7B,eAAe3C,UAAU,EAAG,KAE1C,cAACsD,GAAD,yCAAsBkB,EAAQ/B,aAA9B,SACA,cAACc,GAAD,UAAWiB,EAAQI,WACnB,cAAC,IAAD,CACE9E,GACE,EAAKnB,MAAMc,QAAX,iBACc+E,EAAQpF,IADtB,cAEWoF,EAAQpF,IAJvB,SAOE,cAACuE,GAAD,sBAtBKc,UA6BjB,cAACxB,GAAD,UACE,cAAC,IAAD,CACEmB,SAAUJ,KAAKH,MAAMC,KACrBO,IAAK,SAACC,GAAD,OAAa,EAAKH,QAAUG,GACjC3C,aAAc,EACdC,cAAc,EACdiD,eAAe,EACfN,QAAQ,EACRO,YAAY,EACZC,UAAU,EACVC,cAAe,IACfjD,WAAY,CACV,CACEC,WAAY,IACZR,SAAU,CACRG,aAAc,IAGlB,CACEK,WAAY,IACZR,SAAU,CACRG,aAAc,KApBtB,SAyBGqC,KAAKrF,MAAMwD,WAAWC,KAAI,SAACoC,EAASC,GAAV,OACzB,cAAChB,GAAD,CAAkBN,MAAO,OAAzB,SACE,cAACC,GAAD,CAEED,OAAO,EACPvE,MAAK,6CAAwC4F,EAAQE,eAHvD,SAKE,cAAClB,GAAD,UACG,EAAK7E,MAAMc,QACR+E,EAAQlF,MAAM2F,MAAM,EAAG,IACvBT,EAAQG,KAAKM,MAAM,EAAG,OAPvBT,EAAQpF,KAFNqF,iB,GAlFaS,a,SC1FhC3G,GAAYC,IAAOC,IAAV,4BAET0G,GAAS3G,IAAOC,IAAV,4BAEN2G,GAAW5G,IAAOC,IAAV,6EAyDC4G,GAnDO,SAAC,GAAD,IAAGlD,EAAH,EAAGA,WAAYmD,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,MAA3C,OACpB,qCACE,cAACC,GAAA,EAAD,UACE,wDAEDF,EACC,cAACG,EAAD,IAEA,eAAC,GAAD,WACE,cAACR,GAAD,UACE,cAAC,GAAD,CAAUhD,WAAYA,EAAY1C,SAAS,MAE7C,eAAC2F,GAAD,WACGjD,GAAcA,EAAWpC,OAAS,GACjC,cAAC,EAAD,CACET,MAAM,cACN6C,WAAYA,EACZ1C,SAAS,IAIZ8F,GAAWA,EAAQxF,OAAS,GAC3B,cAAC,EAAD,CACET,MAAM,iBACN6C,WAAYoD,EACZ9F,SAAS,IAGZ6F,GAAYA,EAASvF,OAAS,GAC7B,cAAC,EAAD,CACET,MAAM,kBACN6C,WAAYmD,EACZ7F,SAAS,IAIZgG,GAAS,cAAC,GAAD,CAAS3E,MAAM,UAAUiC,KAAM0C,c,SCrD7CG,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GACD,kBAAMP,GAAIQ,IAAI,iBADbD,GAEF,kBAAMP,GAAIQ,IAAI,eAFZD,GAGE,kBAAMP,GAAIQ,IAAI,oBAHhBD,GAIC,SAAC/G,GAAD,OACVwG,GAAIQ,IAAJ,aAAchH,GAAM,CAClB4G,OAAQ,CACNK,mBAAoB,aAPfF,GAUH,SAACG,GAAD,OACNV,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OAbrBH,GAgBJ,SAAC/G,GAAD,OAAQwG,GAAIQ,IAAJ,aAAchH,EAAd,cAhBJ+G,GAiBL,SAAC/G,GAAD,OAAQwG,GAAIQ,IAAJ,aAAchH,EAAd,eAGHqH,GACC,kBAAMb,GAAIQ,IAAI,sBADfK,GAED,kBAAMb,GAAIQ,IAAI,mBAFbK,GAGF,kBAAMb,GAAIQ,IAAI,kBAHZK,GAIE,SAACrH,GAAD,OACXwG,GAAIQ,IAAJ,gBAAiBhH,GAAM,CACrB4G,OAAQ,CACNK,mBAAoB,aAPfI,GAUH,SAACH,GAAD,OACNV,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OAbrBG,GAgBJ,SAACrH,GAAD,OAAQwG,GAAIQ,IAAJ,gBAAiBhH,EAAjB,cAhBJqH,GAiBL,SAACrH,GAAD,OAAQwG,GAAIQ,IAAJ,gBAAiBhH,EAAjB,eC7CDsH,G,4MCEb7C,MAAQ,CACN1B,WAAY,KACZmD,SAAU,KACVC,QAAS,KACTE,MAAO,KACPD,SAAS,G,8FAIX,sCAAAmB,EAAA,+EAIcF,KAJd,uBAGuBtE,EAHvB,EAGMyE,KAAQC,QAHd,SAQcJ,KARd,uBAOuBnB,EAPvB,EAOMsB,KAAQC,QAPd,UAYcJ,KAZd,iBAWuBlB,EAXvB,EAWMqB,KAAQC,QAEV7C,KAAKC,SAAS,CACZ9B,aACAmD,WACAC,YAhBN,kDAmBIvB,KAAKC,SAAS,CACZwB,MAAO,mCApBb,yBAuBIzB,KAAKC,SAAS,CACZuB,SAAS,IAxBf,6E,0EA6BA,WAAU,IAAD,EACmDxB,KAAKH,MAAvD1B,EADD,EACCA,WAAYmD,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASE,EADhC,EACgCA,MAAOD,EADvC,EACuCA,QAC9C,OACE,cAAC,GAAD,CACErD,WAAYA,EACZmD,SAAUA,EACVC,QAASA,EACTE,MAAOA,EACPD,QAASA,Q,GA/CYsB,IAAM5B,WCO7B3G,GAAYC,IAAOC,IAAV,gDAIT0G,GAAS3G,IAAOC,IAAV,4BAEN2G,GAAW5G,IAAOC,IAAV,4BAmDCsI,GAjDK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUzB,EAAb,EAAaA,QAAS0B,EAAtB,EAAsBA,YAAazB,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OAClB,qCACE,cAACC,GAAA,EAAD,UACE,0DAEDF,EACC,cAACG,EAAD,IAEA,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAUxD,WAAY6E,EAAUvH,SAAS,MAE3C,eAAC,GAAD,WACGuH,GAAYA,EAASjH,OAAS,GAC7B,cAAC,EAAD,CACET,MAAM,kBACN6C,WAAY6E,EACZvH,SAAS,IAGZ8F,GAAWA,EAAQxF,OAAS,GAC3B,cAAC,EAAD,CACET,MAAM,eACN6C,WAAYoD,EACZ9F,SAAS,IAGZwH,GAAeA,EAAYlH,OAAS,GACnC,cAAC,EAAD,CACET,MAAM,eACN6C,WAAY8E,EACZxH,SAAS,IAGZgG,GAAS,cAAC,GAAD,CAAS3E,MAAM,UAAUiC,KAAM0C,cClDpCyB,G,4MCGbrD,MAAQ,CACNmD,SAAU,KACVzB,QAAS,KACT0B,YAAa,KACbxB,MAAO,KACPD,SAAS,G,8FAGX,sCAAAmB,EAAA,+EAIcR,KAJd,uBAGuBa,EAHvB,EAGMJ,KAAQC,QAHd,SAOcV,KAPd,uBAMuBZ,EANvB,EAMMqB,KAAQC,QANd,UAUcV,KAVd,iBASuBc,EATvB,EASML,KAAQC,QAEV7C,KAAKC,SAAS,CACZ+C,WACAzB,UACA0B,gBAdN,kDAiBIjD,KAAKC,SAAS,CACZwB,MAAO,8BAlBb,yBAqBIzB,KAAKC,SAAS,CACZuB,SAAS,IAtBf,6E,0EA2BA,WAAU,IAAD,EACoDxB,KAAKH,MAAxDmD,EADD,EACCA,SAAUzB,EADX,EACWA,QAAS0B,EADpB,EACoBA,YAAaxB,EADjC,EACiCA,MAAOD,EADxC,EACwCA,QAC/C,OACE,cAAC,GAAD,CACEwB,SAAUA,EACVzB,QAASA,EACT0B,YAAaA,EACbxB,MAAOA,EACPD,QAASA,Q,GA5CwBsB,IAAM5B,WCKzC3G,GAAYC,IAAOC,IAAV,oDAIT0I,GAAO3I,IAAO4I,KAAV,sEAKJC,GAAQ7I,IAAO8I,MAAV,iFAsEIC,GAhES,SAAC,GAAD,IACtBC,EADsB,EACtBA,YACAC,EAFsB,EAEtBA,SACAjC,EAHsB,EAGtBA,QACAkC,EAJsB,EAItBA,WACAC,EALsB,EAKtBA,aACAlC,EANsB,EAMtBA,MACAmC,EAPsB,EAOtBA,WAPsB,OAStB,qCACE,cAAClC,GAAA,EAAD,UACE,wDAGA,eAAC,GAAD,WACE,cAACyB,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,MAGbpC,EACC,cAACG,EAAD,IAEA,qCACG6B,GAAeA,EAAYzH,OAAS,GACnC,cAAC,EAAD,CACET,MAAM,eACN6C,WAAYqF,EACZ/H,SAAS,IAGZgI,GAAYA,EAAS1H,OAAS,GAC7B,cAAC,EAAD,CACET,MAAM,iBACN6C,WAAYsF,EACZhI,SAAS,IAGZgG,GAAS,cAAC,GAAD,CAAS3E,MAAM,UAAUiC,KAAM0C,IACxCgC,GACCD,GACoB,IAApBC,EAAS1H,QACc,IAAvByH,EAAYzH,QACV,cAAC,GAAD,CAASgD,KAAK,oBAAoBjC,MAAM,sBCnEzCmH,G,4MCGbpE,MAAQ,CACN2D,YAAa,KACbC,SAAU,KACVC,WAAY,GACZjC,MAAO,KACPD,SAAS,G,EAGXmC,aAAe,SAACO,GACdA,EAAMC,iBAEa,KADI,EAAKtE,MAApB6D,YAEN,EAAKU,gB,EAITR,WAAa,SAACM,GAAW,IAEXH,EACRG,EADFG,OAAUN,MAEZ,EAAK9D,SAAS,CACZyD,WAAYK,K,EAIhBK,a,sBAAe,oCAAAzB,EAAA,6DACLe,EAAe,EAAK7D,MAApB6D,WADK,kBAKDjB,GAAiBiB,GALhB,uBAIQF,EAJR,EAITZ,KAAQC,QAJC,SAQDV,GAAauB,GARZ,gBAOQD,EAPR,EAOTb,KAAQC,QAEV,EAAK5C,SAAS,CACZuD,cACAC,WACAjC,SAAS,IAZA,kDAeX,EAAKvB,SAAS,CACZwB,MAAO,wBAhBE,yBAmBX,EAAKxB,SAAS,CACZuB,SAAS,IApBA,6E,4CAyBf,WAAU,IAAD,EACuDxB,KAAKH,MAA3D2D,EADD,EACCA,YAAaC,EADd,EACcA,SAAUC,EADxB,EACwBA,WAAYjC,EADpC,EACoCA,MAAOD,EAD3C,EAC2CA,QAClD,OACE,cAAC,GAAD,CACEgC,YAAaA,EACbC,SAAUA,EACVC,WAAYA,EACZjC,MAAOA,EACPD,QAASA,EACTmC,aAAc3D,KAAK2D,aACnBC,WAAY5D,KAAK4D,iB,GA7DoBd,IAAM5B,WCA7CoD,GAAS9J,IAAO+J,OAAV,oRAcNC,GAAOhK,IAAOiK,GAAV,gDAIJhF,GAAOjF,IAAOkK,GAAV,2KAKJ,SAAC/J,GAAD,OAAYA,EAAMgK,QAAU,UAAY,iBAGxCC,GAAQpK,YAAOqK,IAAPrK,CAAH,qHAOIsK,gBAAW,gBAAeC,EAAf,EAAGC,SAAYD,SAAf,OACxB,cAACT,GAAD,UACE,eAACE,GAAD,WACE,cAAC,GAAD,CAAMG,QAAsB,MAAbI,EAAf,SACE,cAACH,GAAD,CAAO9I,GAAG,IAAV,sBAEF,cAAC,GAAD,CAAM6I,QAAsB,QAAbI,EAAf,SACE,cAACH,GAAD,CAAO9I,GAAG,MAAV,kBAEF,cAAC,GAAD,CAAM6I,QAAsB,YAAbI,EAAf,SACE,cAACH,GAAD,CAAO9I,GAAG,UAAV,8B,oBC3CFvB,GAAYC,IAAOC,IAAV,gDAITwK,GAAMzK,IAAOC,IAAV,yLACiB,SAACE,GAAD,OAAWA,EAAMC,SAQrCI,GAAiBR,IAAOC,IAAV,4EAKdyK,GAAO1K,IAAOM,KAAV,wEAIJqK,GAAW3K,IAAOM,KAAV,kDAIC,eAAiD,IAA9CsK,EAA6C,EAA7CA,UAAW7G,EAAkC,EAAlCA,cAAe8G,EAAmB,EAAnBA,aAC1C,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAACJ,GAAD,CACErK,MACEyK,EAAY,yCAC0BA,GAClC3J,EAAQ,IAA+BC,YAIjD,cAACwJ,GAAD,UAAWC,IACX,cAACF,GAAD,UAAO3G,QClCPhE,GAAYC,IAAOC,IAAV,sHAOT6K,GAAW9K,IAAOC,IAAV,oQAMY,SAACE,GAAD,OAAWA,EAAM4K,WAQrCC,GAAUhL,IAAOC,IAAV,uHAQPgL,GAAQjL,IAAOC,IAAV,sLAEe,SAACE,GAAD,OAAWA,EAAM4K,WAOrCG,GAAOlL,IAAOC,IAAV,mFAMJQ,GAAQT,IAAOmL,GAAV,kDAILC,GAAgBpL,IAAOC,IAAV,mDAIbgF,GAAOjF,IAAOM,KAAV,wEAKJ+K,GAAUrL,IAAOM,KAAV,iDAIPyE,GAAW/E,IAAOsL,EAAV,6HAQRC,GAAavL,IAAOC,IAAV,mKAUVuL,GAAiBxL,IAAOC,IAAV,uGAOdwL,GAAmBzL,IAAOC,IAAV,4BAEtB,SAAS8B,GAAU5B,GAAQ,IACjB6B,EAAY7B,EAAZ6B,QACR,OACE,sBACEC,UAAU,aACVC,MAAO,CACLC,SAAU,WACVC,OAAQ,MACRC,MAAO,QACPC,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,OACZC,QAAS,eACTC,SAAU,OACVC,OAAQ,WAEVb,QAASA,EAfX,SAiBE,oCAKN,SAASc,GAAS3C,GAAQ,IAChB6B,EAAY7B,EAAZ6B,QACR,OACE,sBACEC,UAAU,aACVC,MAAO,CACLC,SAAU,WACVC,OAAQ,MACRW,KAAM,QACNT,MAAO,OACPC,MAAO,OACPC,OAAQ,OACRC,UAAW,SACXC,WAAY,OACZC,QAAS,eACTC,SAAU,OACVC,OAAQ,WAEVb,QAASA,EAfX,SAiBE,oCAKN,I,GAAMgB,GAAW,CACff,UAAW,SACXgB,UAAU,EACVC,cAAe,OACfC,aAAc,EACdC,cAAc,EACdC,UAAW,cAAC,GAAD,IACXC,UAAW,cAAC,GAAD,IACXC,WAAY,CACV,CACEC,WAAY,KACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,IAGpB,CACED,WAAY,KACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,IAGpB,CACED,WAAY,IACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,IAGpB,CACED,WAAY,IACZR,SAAU,CACRG,aAAc,EACdM,eAAgB,MAMlBuB,GAAWhF,IAAOsL,EAAV,sGAORI,GAAiB1L,IAAOC,IAAV,mbAuHL0L,GAjGS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,OAAQ9E,EAAzB,EAAyBA,QAAzB,EAAkCC,MAAlC,OACtBD,EACE,qCACE,cAACE,GAAA,EAAD,UACE,yDAEF,cAACC,EAAD,OAGF,eAAC,GAAD,WACE,cAACD,GAAA,EAAD,UACE,kCACG4E,EAAOhI,eAAiBgI,EAAOhI,eAAiBgI,EAAO/H,cAD1D,kBAKF,cAAC+G,GAAD,CACEC,QAAO,6CAAwCe,EAAO5F,iBAExD,eAAC8E,GAAD,WACE,cAACC,GAAD,CACEF,QACEe,EAAO9H,YAAP,6CAC0C8H,EAAO9H,aAC7C9C,EAAQ,MAGhB,eAACuK,GAAD,WACE,eAACP,GAAD,WACE,eAAC,GAAD,WACGa,QAAQC,IAAI,CAAEH,WACdC,EAAOhI,eACJgI,EAAOhI,eACPgI,EAAO/H,iBAEb,eAACqH,GAAD,WACE,cAAC,GAAD,UACGU,EAAO5H,aACJ4H,EAAO5H,aAAa1C,UAAU,EAAG,GACjCsK,EAAO3H,eAAe3C,UAAU,EAAG,KAEzC,cAAC6J,GAAD,qBACA,cAAC,GAAD,UACGS,EAAOG,QAAP,UACMH,EAAOG,QADb,kBAEMH,EAAOI,iBAFb,UAIH,cAACb,GAAD,qBACA,cAAC,GAAD,UACGS,EAAOK,QACNL,EAAOK,OAAOvI,KAAI,SAACwI,EAAOnG,GAAR,OAChBA,IAAU6F,EAAOK,OAAO5K,OAAS,EAC7B6K,EAAMjG,KADV,UAEOiG,EAAMjG,KAFb,eAMR,cAAC,GAAD,UAAW2F,EAAO1F,cAGpB,eAACmF,GAAD,WACE,cAAC,GAAD,sBACA,cAACC,GAAD,UACGK,EAAOjI,KAAI,SAACyI,EAAOpG,GAAR,OACV,cAAC,KAAD,CAEEqG,IAAG,0CAAqCD,EAAME,KAC9ChK,MAAM,OACNC,OAAO,QAHFyD,WAQb,eAACyF,GAAD,WACE,cAAC,GAAD,qBACA,cAAC,IAAD,2BAAY1I,IAAZ,aACG4I,EAAKhI,KAAI,SAAC4I,EAAOvG,GAAR,OACR,cAACwG,GAAD,CAEE7B,UAAW4B,EAAM5B,UACjB7G,cAAeyI,EAAMzI,cACrB8G,aAAc2B,EAAM3B,cAHf5E,sBCpSRyG,G,kDCGb,WAAYvM,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGHoK,EACVpK,EADFqK,SAAYD,SAHG,OAKjB,EAAKlF,MAAQ,CACXyG,OAAQ,KACRa,OAAQ,KACR1F,MAAO,KACPD,SAAS,EACT/F,QAASsJ,EAASqC,SAAS,YAVZ,E,4FAcnB,sDAAAzE,EAAA,2DAMM3C,KAAKrF,MAHKS,EAHhB,EAEIiM,MACErF,OAAU5G,GAEDkM,EALf,EAKIC,QAAWD,KAEL7L,EAAYuE,KAAKH,MAAjBpE,QACF+L,EAAWC,OAAOrM,IACpBsM,MAAMF,GATZ,yCAUWF,EAAK,MAVhB,UAYMhB,EAAS,KACTa,EAAS,KACTf,EAAO,KAdb,UAgBQ3K,EAhBR,kCAiBgCgH,GAAsB+E,GAjBtD,wBAiBelB,EAjBf,EAiBS1D,KAjBT,UAkByBH,GAAgB+E,GAlBzC,eAkBYG,EAlBZ,OAmBMR,EAASQ,EAAK/E,KAAKC,QAnBzB,UAoB6BJ,GAAe+E,GApB5C,QAoBYI,EApBZ,OAqBMxB,EAAOwB,EAAShF,KAAKwD,KArB3B,yCAuBgCjE,GAAiBqF,GAvBjD,wBAuBelB,EAvBf,EAuBS1D,KAvBT,UAwByBT,GAAYqF,GAxBrC,eAwBYG,EAxBZ,OAyBMR,EAASQ,EAAK/E,KAAKC,QAzBzB,UA0B6BV,GAAWqF,GA1BxC,QA0BYI,EA1BZ,OA2BMxB,EAAOwB,EAAShF,KAAKwD,KA3B3B,0DA8BIpG,KAAKC,SAAS,CAAEwB,MAAO,yBA9B3B,yBAgCIzB,KAAKC,SAAS,CAAEuB,SAAS,EAAO8E,SAAQa,SAAQf,SAhCpD,6E,0EAoCA,WAAU,IAAD,EAC0CpG,KAAKH,MAA9CuG,EADD,EACCA,KAAMe,EADP,EACOA,OAAQb,EADf,EACeA,OAAQ7E,EADvB,EACuBA,MAAOD,EAD9B,EAC8BA,QACrC,OACE,mCACE,cAAC,GAAD,CACE4E,KAAMA,EACNC,OAAQc,EACRb,OAAQA,EACR7E,MAAOA,EACPD,QAASA,U,GA5D0BsB,IAAM5B,WCWpC,qBACb,eAAC,IAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2G,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,cAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWhN,KACpC,cAAC,IAAD,CAAO8M,KAAK,UAAUE,UAAWhN,KACjC,cAAC,IAAD,CAAUoN,KAAK,IAAIrM,GAAG,a,SCHbsM,GAlBMC,YAAH,ybACZC,MCOSC,OARf,WACE,OACE,qCACE,cAACC,GAAD,IACA,cAACC,GAAD,QCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U,gCCT1B,OAAe,cAA0B,4C","file":"static/js/main.1674ebba.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  padding: 15px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Detail = styled.span`\r\n  font-size: 15px;\r\n  position: absolute;\r\n  bottom: 50%;\r\n  right: 30px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n    ${Detail} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Container>\r\n    <ImageContainer>\r\n      <Image\r\n        bgUrl={\r\n          imageUrl\r\n            ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n            : require(\"../assets/noPosterSmall.png\").default\r\n        }\r\n      />\r\n      <Rating>\r\n        <span role=\"img\" aria-label=\"rating\">\r\n          ⭐\r\n        </span>{\" \"}\r\n        {rating}/10\r\n      </Rating>\r\n      <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n        <Detail>View detail</Detail>\r\n      </Link>\r\n    </ImageContainer>\r\n    <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n    <Year>{year}</Year>\r\n  </Container>\r\n);\r\n\r\nPoster.prototype = {\r\n  id: PropTypes.number,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string.isRequired,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Poster from \"Components/Poster\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n// 마지막 차일드에게 마진을 안주고싶을때\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n`;\r\n\r\nfunction NextArrow(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <span\r\n      className=\"priv_arrow\"\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"58%\",\r\n        right: \"-15px\",\r\n        color: \"#fff\",\r\n        width: \"25px\",\r\n        height: \"25px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"40px\",\r\n        display: \"inline-block\",\r\n        fontSize: \"40px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <i>{`>`}</i>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction PreArrow(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <span\r\n      className=\"priv_arrow\"\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"58%\",\r\n        left: \"-15px\",\r\n        color: \"#fff\",\r\n        width: \"25px\",\r\n        height: \"25px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"40px\",\r\n        display: \"inline-block\",\r\n        fontSize: \"40px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <i>{`<`}</i>\r\n    </span>\r\n  );\r\n}\r\n\r\nconst settings = {\r\n  className: \"center\",\r\n  infinite: true,\r\n  centerPadding: \"60px\",\r\n  slidesToShow: 13,\r\n  swipeToSlide: true,\r\n  nextArrow: <NextArrow />,\r\n  prevArrow: <PreArrow />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1300,\r\n      settings: {\r\n        slidesToShow: 10,\r\n        slidesToScroll: 10,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 7,\r\n        slidesToScroll: 7,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nconst Section = ({ title, nowPlaying, isMovie }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    {nowPlaying && nowPlaying.length > 0 && (\r\n      <Slider {...settings}>\r\n        {nowPlaying.map((movie) => (\r\n          <>\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              title={isMovie ? movie.original_title : movie.original_name}\r\n              imageUrl={movie.poster_path}\r\n              rating={movie.vote_average}\r\n              isMovie={isMovie}\r\n              year={() =>\r\n                isMovie\r\n                  ? movie.release_date.substring(0, 4)\r\n                  : movie.first_air_date.substring(0, 4)\r\n              }\r\n            ></Poster>\r\n          </>\r\n        ))}\r\n      </Slider>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSection.prototyps = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n// 페이지 클릭시 로딩되는부분 처리\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.prototype = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Slider from \"react-slick\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst Container = styled.div`\r\n  margin: 0px;\r\n  padding: 0px;\r\n  padding-bottom: 30px;\r\n`;\r\n\r\nconst MainSlider = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst SubSlider = styled.div`\r\n  position: absolute;\r\n  bottom: 1%;\r\n  width: 100%;\r\n  z-index: 1;\r\n`;\r\n\r\nconst MainImg = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  width: 100%;\r\n  height: ${(props) => (props.thumb ? \"20vh\" : \"calc(100vh - 50px);\")};\r\n  z-index: -1;\r\n  padding: 0px 70px;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst SubImg = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 200px;\r\n  &:hover {\r\n    border: 5px solid white;\r\n  }\r\n`;\r\n\r\nconst MainTitle = styled.div`\r\n  position: relative;\r\n  top: 40%;\r\n  width: 50%;\r\n  font-size: 72px;\r\n`;\r\n\r\nconst SubContent = styled.span`\r\n  position: relative;\r\n  top: 45%;\r\n  width: 50%;\r\n  font-size: 40px;\r\n`;\r\n\r\nconst OverView = styled.div`\r\n  position: relative;\r\n  top: 50%;\r\n  width: 50%;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst SubTitle = styled.div`\r\n  position: relative;\r\n  font-size: 24px;\r\n  top: 80%;\r\n  left: 5%;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  padding: ${(prop) => prop.thumb};\r\n  margin: 0px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst DetailTxt = styled.div`\r\n  position: relative;\r\n  padding-left: 5px;\r\n  font-size: 65px;\r\n  left: 90%;\r\n  top: 40%;\r\n  background-color: gray;\r\n  opacity: 0.65;\r\n  border-radius: 50%;\r\n  height: 70px;\r\n  width: 70px;\r\n  text-align: center;\r\n  line-height: 60px;\r\n`;\r\n\r\nexport default class Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nav1: null,\r\n      nav2: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      nav1: this.slider1,\r\n      nav2: this.slider2,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <MainSlider>\r\n          <Slider\r\n            asNavFor={this.state.nav2}\r\n            ref={(slider) => (this.slider1 = slider)}\r\n            arrows={false}\r\n          >\r\n            {this.props.nowPlaying.map((content, index) => (\r\n              <Item key={index} thumb={\"0\"}>\r\n                <MainImg\r\n                  thumb={false}\r\n                  bgUrl={`https://image.tmdb.org/t/p/original${content.backdrop_path}`}\r\n                >\r\n                  <MainTitle>\r\n                    {this.props.isMovie ? content.title : content.name}\r\n                  </MainTitle>\r\n                  <SubContent>\r\n                    {this.props.isMovie\r\n                      ? content.release_date.substring(0, 4)\r\n                      : content.first_air_date.substring(0, 4)}\r\n                  </SubContent>\r\n                  <SubContent>{` • 🌟 ${content.vote_average}/10`}</SubContent>\r\n                  <OverView>{content.overview}</OverView>\r\n                  <Link\r\n                    to={\r\n                      this.props.isMovie\r\n                        ? `/movie/${content.id}`\r\n                        : `/tv/${content.id}`\r\n                    }\r\n                  >\r\n                    <DetailTxt>{`>`}</DetailTxt>\r\n                  </Link>\r\n                </MainImg>\r\n              </Item>\r\n            ))}\r\n          </Slider>\r\n        </MainSlider>\r\n        <SubSlider>\r\n          <Slider\r\n            asNavFor={this.state.nav1}\r\n            ref={(slider) => (this.slider2 = slider)}\r\n            slidesToShow={5}\r\n            swipeToSlide={true}\r\n            focusOnSelect={true}\r\n            arrows={false}\r\n            centerMode={true}\r\n            autoplay={false}\r\n            autoplaySpeed={5000}\r\n            responsive={[\r\n              {\r\n                breakpoint: 960,\r\n                settings: {\r\n                  slidesToShow: 3,\r\n                },\r\n              },\r\n              {\r\n                breakpoint: 768,\r\n                settings: {\r\n                  slidesToShow: 2,\r\n                },\r\n              },\r\n            ]}\r\n          >\r\n            {this.props.nowPlaying.map((content, index) => (\r\n              <Item key={index} thumb={\"10px\"}>\r\n                <SubImg\r\n                  key={content.id}\r\n                  thumb={true}\r\n                  bgUrl={`https://image.tmdb.org/t/p/original${content.backdrop_path}`}\r\n                >\r\n                  <SubTitle>\r\n                    {this.props.isMovie\r\n                      ? content.title.slice(0, 30)\r\n                      : content.name.slice(0, 30)}\r\n                  </SubTitle>\r\n                </SubImg>\r\n              </Item>\r\n            ))}\r\n          </Slider>\r\n        </SubSlider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nCarousel.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Carousel from \"Components/Carousel\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Slider = styled.div``;\r\n\r\nconst Contents = styled.div`\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n`;\r\n\r\n//nowplaying의 값이 있으면 만드는 부분\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Songfilx</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Slider>\r\n          <Carousel nowPlaying={nowPlaying} isMovie={true}></Carousel>\r\n        </Slider>\r\n        <Contents>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section\r\n              title=\"Now Playing\"\r\n              nowPlaying={nowPlaying}\r\n              isMovie={true}\r\n            ></Section>\r\n          )}\r\n\r\n          {popular && popular.length > 0 && (\r\n            <Section\r\n              title=\"Popular Movies\"\r\n              nowPlaying={popular}\r\n              isMovie={true}\r\n            ></Section>\r\n          )}\r\n          {upComing && upComing.length > 0 && (\r\n            <Section\r\n              title=\"Upcoming Movies\"\r\n              nowPlaying={upComing}\r\n              isMovie={true}\r\n            ></Section>\r\n          )}\r\n\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Contents>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"975b0f546150de58620140a530874329\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  video: (id) => api.get(`tv/${id}/videos?`),\r\n  cast: (id) => api.get(`tv/${id}/credits?`),\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"vidoes\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  video: (id) => api.get(`movie/${id}/videos?`),\r\n  cast: (id) => api.get(`movie/${id}/credits?`),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n  //컴포넌트가 마운트됬을때 찾음\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upComing },\r\n      } = await moviesApi.upComing();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      ></HomePresenter>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Carousel from \"Components/Carousel\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Slider = styled.div``;\r\n\r\nconst Contents = styled.div``;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Songfilx</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Slider>\r\n          <Carousel nowPlaying={topRated} isMovie={false}></Carousel>\r\n        </Slider>\r\n        <Contents>\r\n          {topRated && topRated.length > 0 && (\r\n            <Section\r\n              title=\"Top Rated Shows\"\r\n              nowPlaying={topRated}\r\n              isMovie={false}\r\n            ></Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section\r\n              title=\"Popular Show\"\r\n              nowPlaying={popular}\r\n              isMovie={false}\r\n            ></Section>\r\n          )}\r\n          {airingToday && airingToday.length > 0 && (\r\n            <Section\r\n              title=\"Airing Today\"\r\n              nowPlaying={airingToday}\r\n              isMovie={false}\r\n            ></Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Contents>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      ></TVPresenter>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResult,\r\n  tvResult,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Search | Songfilx</title>\r\n    </Helmet>\r\n    {\r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input\r\n            placeholder=\"Search Movies or TV Shows...\"\r\n            value={searchTerm}\r\n            onChange={updateTerm}\r\n          ></Input>\r\n        </Form>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            {movieResult && movieResult.length > 0 && (\r\n              <Section\r\n                title=\"Movie Result\"\r\n                nowPlaying={movieResult}\r\n                isMovie={true}\r\n              ></Section>\r\n            )}\r\n            {tvResult && tvResult.length > 0 && (\r\n              <Section\r\n                title=\"TV Show Result\"\r\n                nowPlaying={tvResult}\r\n                isMovie={false}\r\n              ></Section>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n            {tvResult &&\r\n              movieResult &&\r\n              tvResult.length === 0 &&\r\n              movieResult.length === 0 && (\r\n                <Message text=\"Nothing found for\" color=\"#95a5a6\" />\r\n              )}\r\n          </>\r\n        )}\r\n      </Container>\r\n    }\r\n  </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResult: PropTypes.array,\r\n  tvResult: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class SearchContainer extends React.Component {\r\n  state = {\r\n    movieResult: null,\r\n    tvResult: null,\r\n    searchTerm: \"\",\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    try {\r\n      const {\r\n        data: { results: movieResult },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResult },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResult,\r\n        tvResult,\r\n        loading: true,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find results.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResult, tvResult, searchTerm, error, loading } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResult={movieResult}\r\n        tvResult={tvResult}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      ></SearchPresenter>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.7);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst Img = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  width: 160px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n`;\r\n\r\nconst Name = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\nconst CharName = styled.span`\r\n  font-size: 10px;\r\n`;\r\n\r\nexport default ({ character, original_name, profile_path }) => {\r\n  return (\r\n    <Container>\r\n      <ImageContainer>\r\n        <Img\r\n          bgUrl={\r\n            profile_path\r\n              ? `https://image.tmdb.org/t/p/w200${profile_path}`\r\n              : require(\"../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n      </ImageContainer>\r\n      <CharName>{character}</CharName>\r\n      <Name>{original_name}</Name>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport ReactPlayer from \"react-player\";\r\nimport Slider from \"react-slick\";\r\nimport Actor from \"Components/Actor\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  height: 20%;\r\n  margin-left: 50px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 64px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst OverView = styled.p`\r\n  font-size: 20px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst VideoFrame = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  bottom: -20%;\r\n  margin-left: 45px;\r\n  padding: 10px;\r\n  height: 300px;\r\n  bottom: -11%;\r\n`;\r\n\r\nconst VideoContainer = styled.div`\r\n  position: relative;\r\n  bottom: -70px;\r\n  left: -8%;\r\n  display: flex;\r\n`;\r\n\r\nconst ContentContainer = styled.div``;\r\n\r\nfunction NextArrow(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <span\r\n      className=\"priv_arrow\"\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"58%\",\r\n        right: \"-15px\",\r\n        color: \"#fff\",\r\n        width: \"25px\",\r\n        height: \"25px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"40px\",\r\n        display: \"inline-block\",\r\n        fontSize: \"40px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <i>{`>`}</i>\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction PreArrow(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <span\r\n      className=\"priv_arrow\"\r\n      style={{\r\n        position: \"absolute\",\r\n        bottom: \"58%\",\r\n        left: \"-15px\",\r\n        color: \"#fff\",\r\n        width: \"25px\",\r\n        height: \"25px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"40px\",\r\n        display: \"inline-block\",\r\n        fontSize: \"40px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      onClick={onClick}\r\n    >\r\n      <i>{`<`}</i>\r\n    </span>\r\n  );\r\n}\r\n\r\nconst settings = {\r\n  className: \"center\",\r\n  infinite: true,\r\n  centerPadding: \"60px\",\r\n  slidesToShow: 8,\r\n  swipeToSlide: true,\r\n  nextArrow: <NextArrow />,\r\n  prevArrow: <PreArrow />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 1300,\r\n      settings: {\r\n        slidesToShow: 6,\r\n        slidesToScroll: 6,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 1024,\r\n      settings: {\r\n        slidesToShow: 6,\r\n        slidesToScroll: 6,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 600,\r\n      settings: {\r\n        slidesToShow: 4,\r\n        slidesToScroll: 4,\r\n      },\r\n    },\r\n    {\r\n      breakpoint: 480,\r\n      settings: {\r\n        slidesToShow: 3,\r\n        slidesToScroll: 3,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nconst SubTitle = styled.p`\r\n  position: relative;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-size: 50px;\r\n`;\r\n\r\nconst ActorContainer = styled.div`\r\n  position: relative;\r\n  overflow: hidden;\r\n  bottom: -20%;\r\n  margin-left: 45px;\r\n  padding: 10px;\r\n  width: 1500px;\r\n  height: 300px;\r\n  @media screen and (max-width: 1300px) {\r\n    width: 1300px;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    width: 1024px;\r\n  }\r\n  @media screen and (max-width: 600px) {\r\n    width: 600px;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    width: 480px;\r\n  }\r\n`;\r\n\r\nconst DetailPresenter = ({ cast, videos, result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Songfilx</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n          | Songfilx\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <ContentContainer>\r\n          <Data>\r\n            <Title>\r\n              {console.log({ videos })}\r\n              {result.original_title\r\n                ? result.original_title\r\n                : result.original_name}\r\n            </Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                {result.release_date\r\n                  ? result.release_date.substring(0, 4)\r\n                  : result.first_air_date.substring(0, 4)}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.runtime\r\n                  ? `${result.runtime} min`\r\n                  : `${result.episode_run_time} min`}\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                {result.genres &&\r\n                  result.genres.map((genre, index) =>\r\n                    index === result.genres.length - 1\r\n                      ? genre.name\r\n                      : `${genre.name} / `\r\n                  )}\r\n              </Item>\r\n            </ItemContainer>\r\n            <OverView>{result.overview}</OverView>\r\n          </Data>\r\n\r\n          <VideoFrame>\r\n            <SubTitle>Trailer</SubTitle>\r\n            <VideoContainer>\r\n              {videos.map((video, index) => (\r\n                <ReactPlayer\r\n                  key={index}\r\n                  url={`https://www.youtube.com/watch?v=${video.key}`}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                ></ReactPlayer>\r\n              ))}\r\n            </VideoContainer>\r\n          </VideoFrame>\r\n          <ActorContainer>\r\n            <SubTitle>Actors</SubTitle>\r\n            <Slider {...settings}>\r\n              {cast.map((actor, index) => (\r\n                <Actor\r\n                  key={index}\r\n                  character={actor.character}\r\n                  original_name={actor.original_name}\r\n                  profile_path={actor.profile_path}\r\n                ></Actor>\r\n              ))}\r\n            </Slider>\r\n          </ActorContainer>\r\n        </ContentContainer>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class DetailContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      vidoes: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = Number(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    let vidoes = null;\r\n    let cast = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n        const temp = await moviesApi.video(parsedId);\r\n        vidoes = temp.data.results;\r\n        const tempCast = await moviesApi.cast(parsedId);\r\n        cast = tempCast.data.cast;\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n        const temp = await tvApi.video(parsedId);\r\n        vidoes = temp.data.results;\r\n        const tempCast = await tvApi.cast(parsedId);\r\n        cast = tempCast.data.cast;\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result, vidoes, cast });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { cast, vidoes, result, error, loading } = this.state;\r\n    return (\r\n      <>\r\n        <DetailPresenter\r\n          cast={cast}\r\n          videos={vidoes}\r\n          result={result}\r\n          error={error}\r\n          loading={loading}\r\n        ></DetailPresenter>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\n// 라우터에는 페이지들이 들어감\r\n// Redirect는 특정 페이지로 돌아가는 역할\r\nexport default () => (\r\n  <Router>\r\n    <Header></Header>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={Home}></Route>\r\n      <Route path=\"/tv\" exact component={TV}></Route>\r\n      <Route path=\"/search\" component={Search}></Route>\r\n      <Route path=\"/movie/:id\" component={Detail}></Route>\r\n      <Route path=\"/tv/:id\" component={Detail}></Route>\r\n      <Redirect from=\"*\" to=\"/\"></Redirect>\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nfunction App() {\n  return (\n    <>\n      <Router></Router>\n      <GlobalStyles></GlobalStyles>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export default __webpack_public_path__ + \"static/media/noPosterSmall.a2f288dd.png\";"],"sourceRoot":""}